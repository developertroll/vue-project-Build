{"version":3,"file":"js/130.194cebdd.js","mappings":"qPACEA,EAAAA,EAAAA,IAA+DC,EAAA,CAArDC,KAAMC,EAAAC,SAAWC,YAAYF,EAAAE,a,oDAIzC,GACEC,KAAM,UACNJ,IAAAA,GACE,MAAO,CACLK,WAAUA,EAAAA,EAEd,EACAC,SAAU,CACRJ,QAAAA,GACEG,EAAAA,EAAWE,eACX,MAAML,EAAW,GAEjB,IAAK,MAAMM,KAAQC,KAAKJ,WAAWK,SAAU,CAC3C,MAAMC,EAAO,CACXC,MAAOJ,EAAKK,KACZC,SAAU,IAEZN,EAAKM,SAASC,SAASC,IACrBL,EAAKG,SAASG,KAAK,CACjBL,MAAOI,EAAQZ,KAAO,IAAMY,EAAQE,KAAO,KAC3C,IAGJhB,EAASe,KAAKN,EAChB,CACA,OAAOT,CACT,GAEFiB,QAAS,CACPhB,WAAAA,CAAYH,EAAMoB,GAGhB,IAAIC,EACJ,GAHAC,QAAQC,IAAIH,GAGmB,IAA3BA,EAAKI,WAAWC,OAIlB,YADAH,QAAQC,IAAI,YAFZF,EAAUrB,EAAKY,MAMjB,MAAMR,EAAOiB,EAAQK,MAAM,KAAK,GAChCJ,QAAQC,IAAInB,GAEZ,MAAMc,EAAOG,EAAQK,MAAM,KAAK,GAAGA,MAAM,KAAK,GAE9C,GADAJ,QAAQC,IAAIL,IACPd,IAASc,EAAM,OACpB,MAAMS,EAAStB,EAAAA,EAAWuB,mBAAmBxB,EAAMc,GACnDI,QAAQC,IAAII,GACZlB,KAAKoB,MAAM,aAAcF,EAM3B,I,QCtDJ,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://vue-project/./src/components/org/orgTree.vue","webpack://vue-project/./src/components/org/orgTree.vue?a6cd"],"sourcesContent":["<template lang=\"\">\r\n  <el-tree :data=\"treeData\" @node-click=\"onNodeClick\"> </el-tree>\r\n</template>\r\n<script>\r\nimport { MemberList } from \"@/composables/memberList\";\r\nexport default {\r\n  name: \"orgTree\",\r\n  data() {\r\n    return {\r\n      MemberList,\r\n    };\r\n  },\r\n  computed: {\r\n    treeData() {\r\n      MemberList.initRankList();\r\n      const treeData = [];\r\n      //MemberList.RankList에서 각각이 가진 team 값이 최상위 label이 되며, 그 안에 각각이 가지고 있는 children[name]이 children이 된다.\r\n      for (const item of this.MemberList.RankList) {\r\n        const seed = {\r\n          label: item.team,\r\n          children: [],\r\n        };\r\n        item.children.forEach((element) => {\r\n          seed.children.push({\r\n            label: element.name + \"(\" + element.rank + \")\",\r\n          });\r\n        });\r\n\r\n        treeData.push(seed);\r\n      }\r\n      return treeData;\r\n    },\r\n  },\r\n  methods: {\r\n    onNodeClick(data, node) {\r\n      console.log(node);\r\n      //node.childNodes.length가 0이면 자식이 없는 것이므로 해당 노드를 선택한 것임\r\n      let emitter;\r\n      if (node.childNodes.length === 0) {\r\n        emitter = data.label;\r\n      } else {\r\n        console.log(\"부모 노드 선택\");\r\n        return;\r\n      }\r\n      //이름(직급) 형태로 온 emitter를 이름만 추출해서 emit해야함. 동일한 이름을 가지는 사람을 대비해서 직급으로 한번 더 체크하여 emit할 것임\r\n      const name = emitter.split(\"(\")[0];\r\n      console.log(name);\r\n      //(직급) 으로 들어온 값을 체크해야함\r\n      const rank = emitter.split(\"(\")[1].split(\")\")[0];\r\n      console.log(rank);\r\n      if (!name || !rank) return;\r\n      const member = MemberList.searchWithNameRank(name, rank);\r\n      console.log(member);\r\n      this.$emit(\"node-click\", member);\r\n      //   console.log(emitter, \"emitter\");\r\n      //   console.log(data.label);\r\n      //   if (emitter === data.label) {\r\n      //     this.$emit(\"node-click\", emitter);\r\n      //   }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"\"></style>\r\n","import { render } from \"./orgTree.vue?vue&type=template&id=8844d42c&lang=true\"\nimport script from \"./orgTree.vue?vue&type=script&lang=js\"\nexport * from \"./orgTree.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_el_tree","data","$options","treeData","onNodeClick","name","MemberList","computed","initRankList","item","this","RankList","seed","label","team","children","forEach","element","push","rank","methods","node","emitter","console","log","childNodes","length","split","member","searchWithNameRank","$emit","__exports__","render"],"sourceRoot":""}